# disable MacOS default
cmd - h : [ ]
# alt - v : skhd -k "ctrl + alt - v"
# alt - backspace : skhd -k "ctrl + alt - backspace"

# Overrided MacOS default spaces navigation
ctrl - right : yabai -m space --focus next || yabai -m space --focus first
ctrl - left  : yabai -m space --focus prev || yabai -m space --focus last

# Space navigation (four spaces per display): cmd - {1, 2, 3, 4}
cmd - 1 : SPACES=($(yabai -m query --displays --display | jq -r '.spaces[]')) && [ -n "${SPACES[0]}" ] && yabai -m space --focus "${SPACES[0]}"
cmd - 2 : SPACES=($(yabai -m query --displays --display | jq -r '.spaces[]')) && [ -n "${SPACES[1]}" ] && yabai -m space --focus "${SPACES[1]}"
cmd - 3 : SPACES=($(yabai -m query --displays --display | jq -r '.spaces[]')) && [ -n "${SPACES[2]}" ] && yabai -m space --focus "${SPACES[2]}"
cmd - 4 : SPACES=($(yabai -m query --displays --display | jq -r '.spaces[]')) && [ -n "${SPACES[3]}" ] && yabai -m space --focus "${SPACES[3]}"

# Window cyclic navigation
cmd - j : yabai -m window --focus $(yabai -m query --windows --space | jq -r 'sort_by(.id) | .[(to_entries | .[] | select(.value."has-focus") | .key + 1) % length] | .id')
cmd - k : yabai -m window --focus $(yabai -m query --windows --space | jq -r 'sort_by(.id) | .[(to_entries | .[] | select(.value."has-focus") | .key - 1) % length] | .id')

# Display cyclic navigation
cmd + shift - j : yabai -m display --focus next || yabai -m display --focus first
cmd + shift - k : yabai -m display --focus prev || yabai -m display --focus last

# Window + Display directional navigation
cmd + ctrl - h : yabai -m window --focus west || yabai -m display --focus west
cmd + ctrl - j : yabai -m window --focus south || yabai -m display --focus south
cmd + ctrl - k : yabai -m window --focus north || yabai -m display --focus north
cmd + ctrl - l : yabai -m window --focus east || yabai -m display --focus east

# Moving windows between spaces: alt - {1, 2, 3, 4}
alt - 1 : SPACES=($(yabai -m query --displays --display | jq -r '.spaces[]')) && [ -n "${SPACES[0]}" ] && yabai -m window --space "${SPACES[0]}" --focus
alt - 2 : SPACES=($(yabai -m query --displays --display | jq -r '.spaces[]')) && [ -n "${SPACES[1]}" ] && yabai -m window --space "${SPACES[1]}" --focus
alt - 3 : SPACES=($(yabai -m query --displays --display | jq -r '.spaces[]')) && [ -n "${SPACES[2]}" ] && yabai -m window --space "${SPACES[2]}" --focus
alt - 4 : SPACES=($(yabai -m query --displays --display | jq -r '.spaces[]')) && [ -n "${SPACES[3]}" ] && yabai -m window --space "${SPACES[3]}" --focus

# Moving windows between spaces on next display: alt + shift - {1, 2, 3, 4}
alt + shift - 1 : CURRENT_DISPLAY_ID=$(yabai -m query --displays --space | jq -r '.id') && \
                   SPACES=($(yabai -m query --displays | jq -r --argjson id "$CURRENT_DISPLAY_ID" '.[(. | map(select(.id == ($id % length + 1))) | keys[0])].spaces[]')) && \
                   [ -n "${SPACES[0]}" ] && yabai -m window --space "${SPACES[0]}" --focus
alt + shift - 2 : CURRENT_DISPLAY_ID=$(yabai -m query --displays --space | jq -r '.id') && \
                   SPACES=($(yabai -m query --displays | jq -r --argjson id "$CURRENT_DISPLAY_ID" '.[(. | map(select(.id == ($id % length + 1))) | keys[0])].spaces[]')) && \
                   [ -n "${SPACES[1]}" ] && yabai -m window --space "${SPACES[1]}" --focus
alt + shift - 3 : CURRENT_DISPLAY_ID=$(yabai -m query --displays --space | jq -r '.id') && \
                   SPACES=($(yabai -m query --displays | jq -r --argjson id "$CURRENT_DISPLAY_ID" '.[(. | map(select(.id == ($id % length + 1))) | keys[0])].spaces[]')) && \
                   [ -n "${SPACES[2]}" ] && yabai -m window --space "${SPACES[2]}" --focus
alt + shift - 4 : CURRENT_DISPLAY_ID=$(yabai -m query --displays --space | jq -r '.id') && \
                   SPACES=($(yabai -m query --displays | jq -r --argjson id "$CURRENT_DISPLAY_ID" '.[(. | map(select(.id == ($id % length + 1))) | keys[0])].spaces[]')) && \
                   [ -n "${SPACES[3]}" ] && yabai -m window --space "${SPACES[3]}" --focus

# Moving windows in spaces
ctrl + lalt - h : yabai -m window --warp west || (yabai -m window --display west && yabai -m display --focus west && yabai -m window --warp last)
ctrl + lalt - j : yabai -m window --warp south || (yabai -m window --display south && yabai -m display --focus south)
ctrl + lalt - k : yabai -m window --warp north || (yabai -m window --display north && yabai -m display --focus north)
ctrl + lalt - l : yabai -m window --warp east  || (yabai -m window --display east && yabai -m display --focus east && yabai -m window --warp first)

## Stacks (ctrl + shift - ...)
# Add the active window to the window or stack to the {direction}: shift + ctrl - {h, j, k, l}
ctrl + shift - h : yabai -m window  west --stack $(yabai -m query --windows --window | jq -r '.id') && sketchybar --trigger window_focus
ctrl + shift - j : yabai -m window south --stack $(yabai -m query --windows --window | jq -r '.id') && sketchybar --trigger window_focus
ctrl + shift - k : yabai -m window north --stack $(yabai -m query --windows --window | jq -r '.id') && sketchybar --trigger window_focus
ctrl + shift - l : yabai -m window  east --stack $(yabai -m query --windows --window | jq -r '.id') && sketchybar --trigger window_focus

# Toggle layout of the space
ctrl + lalt - x : yabai -m space --layout "$(yabai -m query --spaces --space | jq -r '.type' | awk '{if ($1 == "bsp") print "stack"; else print "bsp"}')" && sketchybar --trigger window_focus

# Toggle sticky, topmost, picture-in-picture
ctrl + lalt - p : yabai -m window --toggle sticky --toggle topmost; sketchybar --trigger window_focus

# Toggle float
ctrl + lalt - space : yabai -m window --toggle float; sketchybar --trigger window_focus

# Make window fullscreen
ctrl + lalt - 0x24 : yabai -m window --toggle windowed-fullscreen; sketchybar --trigger window_focus

# Make window zoom to parent node
ctrl + lalt + shift - 0x24 : yabai -m window --toggle zoom-fullscreen; sketchybar --trigger window_focus

# Toggle split orientation
ctrl + lalt - s : yabai -m window --toggle split

# Mirror Space on X and Y Axis: shift + lalt - {-, |}
ctrl + lalt - 0x1B : yabai -m space --mirror x-axis # -
ctrl + lalt - 0x2A : yabai -m space --mirror y-axis # |

# Resize windows: ctrl + lalt - {<, >}
ctrl + lalt - 0x2B : yabai -m window --resize right:-100:0 || yabai -m window --resize left:-100:0
ctrl + lalt - 0x2F : yabai -m window --resize right:100:0 || yabai -m window --resize left:100:0

# Equalize size of windows
ctrl + lalt - e : yabai -m space --balance

# Toggle gaps
ctrl + lalt - g : yabai -m space --toggle padding; yabai -m space --toggle gap

## Misc
# Open new kitty window
# lalt - t : kitty msg create-window

# New window in hor./ vert. splits for all applications with yabai
# lalt - s : yabai -m window --insert south;  skhd -k "cmd - n"
# lalt - v : yabai -m window --insert east; skhd -k "cmd - n"

# Toggle sketchybar
# ctrl + lalt - space : sketchybar --bar hidden=toggle
ctrl + lalt - r : sketchybar --remove '/.*/' && sh -c '$HOME/.config/sketchybar/sketchybarrc'
