# disable MacOS default cmd - h
cmd - h : [ ]

# Space Navigation (four spaces per display): cmd - {1, 2, 3, 4}
# lalt - 1 : DISPLAY="$(yabai -m query --displays --display | jq '.index')"; yabai -m space --focus $((1+4*($DISPLAY - 1)))
# lalt - 2 : DISPLAY="$(yabai -m query --displays --display | jq '.index')"; yabai -m space --focus $((2+4*($DISPLAY - 1)))
# lalt - 3 : DISPLAY="$(yabai -m query --displays --display | jq '.index')"; yabai -m space --focus $((3+4*($DISPLAY - 1)))
# lalt - 4 : DISPLAY="$(yabai -m query --displays --display | jq '.index')"; yabai -m space --focus $((4+4*($DISPLAY - 1)))
lalt - 1 : yabai -m space --focus 1
lalt - 2 : yabai -m space --focus 2
lalt - 3 : yabai -m space --focus 3
lalt - 4 : yabai -m space --focus 4
lalt - 5 : yabai -m space --focus 5
lalt - 6 : yabai -m space --focus 6

# Window Navigation (through display borders)
alt - h    : yabai -m window --focus west  || yabai -m display --focus west
alt - j    : yabai -m window --focus south || yabai -m display --focus south
alt - k    : yabai -m window --focus north || yabai -m display --focus north
alt - l    : yabai -m window --focus east  || yabai -m display --focus east

# Moving windows in spaces
alt + shift - h : yabai -m window --warp west  \
                        || begin; yabai -m window --display west && yabai -m display --focus west && yabai -m window --warp last; end \
                        || yabai -m window --move rel:-10:0
alt + shift - j : yabai -m window --warp south \
                        || begin; yabai -m window --display south && yabai -m display --focus south; end \
                        || yabai -m window --move rel:0:10
alt + shift - k : yabai -m window --warp north \
                        || begin; yabai -m window --display north && yabai -m display --focus north; end \
                        || yabai -m window --move rel:0:-10
alt + shift - l : yabai -m window --warp east  \
                        || begin; yabai -m window --display east && yabai -m display --focus east && yabai -m window --warp first; end \
                        || yabai -m window --move rel:10:0

# Moving windows between spaces: alt - {1, 2, 3, 4, p, n } (Assumes 4 Spaces Max per Display)
alt - 1 : set -l SPACES (yabai -m query --displays --display | jq '.spaces[]') && [ -n $SPACES[1] ] \
                  && yabai -m window --space $SPACES[1] && yabai -m space --focus $SPACES[1] 

alt - 2 : set -l SPACES (yabai -m query --displays --display | jq '.spaces[]') && [ -n $SPACES[2] ] \
                  && yabai -m window --space $SPACES[2] && yabai -m space --focus $SPACES[2]

alt - 3 : set -l SPACES (yabai -m query --displays --display | jq '.spaces[]') && [ -n $SPACES[3] ] \
                  && yabai -m window --space $SPACES[3] && yabai -m space --focus $SPACES[3]

alt - 4 : set -l SPACES (yabai -m query --displays --display | jq '.spaces[]') && [ -n $SPACES[4] ] \
                  && yabai -m window --space $SPACES[4] && yabai -m space --focus $SPACES[4]

# Moving windows between spaces on next display: alt + shift - {1, 2, 3, 4, p, n } (Assumes 4 Spaces Max per Display)
#   query display then (display id % display number) to move window to next display spaces
alt + shift - 1 :  set -l DISPLAY_INFO (yabai -m query --displays) \
                        && set -l TARGET_DISPLAY (math (yabai -m query --displays --display | jq '.id') % (echo $DISPLAY_INFO | jq '. | length')) \
                        && set -l SPACES (echo $DISPLAY_INFO | jq --argjson index $TARGET_DISPLAY 'nth($index) | .spaces[]') \
                        && [ -n $SPACES[1] ] && yabai -m window --space $SPACES[1] && yabai -m space --focus $SPACES[1]

alt + shift - 2 :  set -l DISPLAY_INFO (yabai -m query --displays) \
                        && set -l TARGET_DISPLAY (math (yabai -m query --displays --display | jq '.id') % (echo $DISPLAY_INFO | jq '. | length')) \
                        && set -l SPACES (echo $DISPLAY_INFO | jq --argjson index $TARGET_DISPLAY 'nth($index) | .spaces[]') \
                        && [ -n $SPACES[2] ] && yabai -m window --space $SPACES[2] && yabai -m space --focus $SPACES[2]

alt + shift - 3 :  set -l DISPLAY_INFO (yabai -m query --displays) \
                        && set -l TARGET_DISPLAY (math (yabai -m query --displays --display | jq '.id') % (echo $DISPLAY_INFO | jq '. | length')) \
                        && set -l SPACES (echo $DISPLAY_INFO | jq --argjson index $TARGET_DISPLAY 'nth($index) | .spaces[]') \
                        && [ -n $SPACES[3] ] && yabai -m window --space $SPACES[3] && yabai -m space --focus $SPACES[3]

alt + shift - 4 :  set -l DISPLAY_INFO (yabai -m query --displays) \
                        && set -l TARGET_DISPLAY (math (yabai -m query --displays --display | jq '.id') % (echo $DISPLAY_INFO | jq '. | length')) \
                        && set -l SPACES (echo $DISPLAY_INFO | jq --argjson index $TARGET_DISPLAY 'nth($index) | .spaces[]') \
                        && [ -n $SPACES[4] ] && yabai -m window --space $SPACES[4] && yabai -m space --focus $SPACES[4]

# Moving windows in spaces
ctrl + lalt + shift - h : yabai -m window --warp west || $(yabai -m window --display west && sketchybar --trigger windows_on_spaces && yabai -m display --focus west && yabai -m window --warp last) || yabai -m window --move rel:-10:0
ctrl + lalt + shift - j : yabai -m window --warp south || $(yabai -m window --display south && sketchybar --trigger windows_on_spaces && yabai -m display --focus south) || yabai -m window --move rel:0:10
ctrl + lalt + shift - k : yabai -m window --warp north || $(yabai -m window --display north && sketchybar --trigger windows_on_spaces && yabai -m display --focus north) || yabai -m window --move rel:0:-10
ctrl + lalt + shift - l : yabai -m window --warp east || $(yabai -m window --display east && sketchybar --trigger windows_on_spaces && yabai -m display --focus east && yabai -m window --warp first) || yabai -m window --move rel:10:0

# cycle through all windows sorted by: coordinates -> space index -> display index
lalt - n : yabai -m window --focus "$(yabai -m query --windows | jq -re "sort_by(.display, .space, .frame.x, .frame.y, .id) | map(select(.\"is-visible\" == true and .role != \"AXUnknown\")) | reverse | nth(index(map(select(.\"has-focus\" == true))) - 1).id")"
# cycle through all visible windows sorted by: coordinates -> display index
lalt - m : yabai -m window --focus "$(yabai -m query --windows | jq -re "sort_by(.display, .frame.x, .frame.y, .id) | map(select(.\"is-visible\" == true and .role != \"AXUnknown\")) | reverse | nth(index(map(select(.\"has-focus\" == true))) - 1).id")"

# Extended Window Navigation: lalt - {h, ä}
# lalt - o : yabai -m window --focus first
# shift + lalt - o : yabai -m window --focus  last

# Float / Unfloat window: ctrl + lalt - space
ctrl + lalt - space : yabai -m window --toggle float

# Make window zoom to fullscreen: ctrl + lalt + enter
ctrl + lalt - 0x24 : yabai -m window --toggle zoom-fullscreen

# Make window zoom to parent node
ctrl + lalt + shift - 0x24 : yabai -m window --toggle zoom-parent

# Toggle split orientation of the selected windows node: ctrl + lalt - s
ctrl + lalt - s : yabai -m window --toggle split

# Moving windows between spaces: shift + lalt - {1, 2, 3, 4, p, n } (Assumes 4 Spaces Max per Display)
# shift + lalt - 1 : DISPLAY="$(yabai -m query --displays --display | jq '.index')";\
#                   yabai -m window --space $((1+4*($DISPLAY - 1)));\
#                   sketchybar --trigger windows_on_spaces
#
# shift + lalt - 2 : DISPLAY="$(yabai -m query --displays --display | jq '.index')";\
#                   yabai -m window --space $((2+4*($DISPLAY - 1)));\
#                   sketchybar --trigger windows_on_spaces
#
# shift + lalt - 3 : DISPLAY="$(yabai -m query --displays --display | jq '.index')";\
#                   yabai -m window --space $((3+4*($DISPLAY - 1)));\
#                   sketchybar --trigger windows_on_spaces
#
# shift + lalt - 4 : DISPLAY="$(yabai -m query --displays --display | jq '.index')";\
#                   yabai -m window --space $((4+4*($DISPLAY - 1)));\
#                   sketchybar --trigger windows_on_spaces
shift + lalt - 1 : yabai -m window --space 1; sketchybar --trigger windows_on_spaces
shift + lalt - 2 : yabai -m window --space 2; sketchybar --trigger windows_on_spaces
shift + lalt - 3 : yabai -m window --space 3; sketchybar --trigger windows_on_spaces
shift + lalt - 4 : yabai -m window --space 4; sketchybar --trigger windows_on_spaces
shift + lalt - 5 : yabai -m window --space 5; sketchybar --trigger windows_on_spaces
shift + lalt - 6 : yabai -m window --space 6; sketchybar --trigger windows_on_spaces

shift + cmd - 2 : set -l SPACES (yabai -m query --displays --display | jq '.spaces[]') && [ -n $SPACES[2] ] \
                  && yabai -m window --space $SPACES[2]

shift + cmd - 3 : set -l SPACES (yabai -m query --displays --display | jq '.spaces[]') && [ -n $SPACES[3] ] \
                  && yabai -m window --space $SPACES[3]

shift + cmd - 4 : set -l SPACES (yabai -m query --displays --display | jq '.spaces[]') && [ -n $SPACES[4] ] \
                  && yabai -m window --space $SPACES[4]

# Mirror Space on X and Y Axis: shift + lalt - {-, |}
ctrl + lalt - 0x1B : yabai -m space --mirror x-axis # -
ctrl + lalt - 0x2A : yabai -m space --mirror y-axis # |

## Stacks (shift + ctrl - ...)
# Add the active window to the window or stack to the {direction}: shift + ctrl - {j, k, l, ö}
# shift + ctrl - h    : yabai -m window  west --stack $(yabai -m query --windows --window | jq -r '.id'); sketchybar --trigger window_focus
# shift + ctrl - j    : yabai -m window south --stack $(yabai -m query --windows --window | jq -r '.id'); sketchybar --trigger window_focus
# shift + ctrl - k    : yabai -m window north --stack $(yabai -m query --windows --window | jq -r '.id'); sketchybar --trigger window_focus
# shift + ctrl - l    : yabai -m window  east --stack $(yabai -m query --windows --window | jq -r '.id'); sketchybar --trigger window_focus

# Stack Navigation: shift + ctrl - {n, p}
# shift + ctrl - n : yabai -m window --focus stack.next
# shift + ctrl - p : yabai -m window --focus stack.prev

## Resize (ctrl + lalt - ...)
# Resize windows: ctrl + lalt - {<, k, l, >}
ctrl + lalt - 0x2B    : yabai -m window --resize right:-100:0 || yabai -m window --resize left:-100:0
# ctrl + lalt - j    : yabai -m window --resize bottom:0:100 || yabai -m window --resize top:0:100
# ctrl + lalt > k    : yabai -m window --resize bottom:0:-100 || yabai -m window --resize top:0:-100
ctrl + lalt - 0x2F : yabai -m window --resize right:100:0 || yabai -m window --resize left:100:0

# Equalize size of windows: ctrl + lalt - e
ctrl + lalt - e : yabai -m space --balance

# Enable / Disable gaps in current workspace: ctrl + lalt - g
ctrl + lalt - g : yabai -m space --toggle padding; yabai -m space --toggle gap

# Enable / Disable gaps in current workspace: ctrl + lalt - g
#ctrl + lalt - b : yabai -m config window_border off 
#shift + ctrl + lalt - b : yabai -m config window_border on

## Insertion (shift + ctrl + lalt - ...)
# Set insertion point for focused container: shift + ctrl + lalt - {j, k, l, ö, s}
# shift + lalt - h : yabai -m window --insert west
# shift + lalt - j : yabai -m window --insert south
# shift + lalt - k : yabai -m window --insert north
# shift + lalt - l : yabai -m window --insert east
# shift + lalt - s : yabai -m window --insert stack

## Misc
# Open new kitty window
# lalt - t : kitty msg create-window

# New window in hor./ vert. splits for all applications with yabai
lalt - s : yabai -m window --insert east;  skhd -k "cmd - n"
lalt - v : yabai -m window --insert south; skhd -k "cmd - n"

# Toggle sketchybar
shift + lalt - space : sketchybar --bar hidden=toggle
shift + lalt - r : sketchybar --remove '/.*/' && sh -c '$HOME/.config/sketchybar/sketchybarrc'

# Toggle margin of sketchybar
shift + lalt - m : CURRENT="$(sketchybar --query bar | jq -r '.y_offset')"; \
                  if [ "$CURRENT" -eq "0" ]; then \
                    yabai -m config external_bar all:36:0; \
                    sketchybar --animate sin 15 --bar margin=10 y_offset=4 corner_radius=9; \
                  else \
                    yabai -m config external_bar all:36:0; \
                    sketchybar --animate sin 15 --bar margin=0 y_offset=0 corner_radius=0; \
                  fi \

lalt - space : yabai -m window --toggle float; sketchybar --trigger window_focus
